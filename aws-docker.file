		How to install Docker on Amazon Linux2

	URL :- https://www.cyberciti.biz/faq/how-to-install-docker-on-amazon-linux-2/

1.Login into remote AWS server using the ssh command:
	
	$ ssh ec2-user@ec2-ip-address-dns-name-here

2.Apply pending updates using the yumcommand:

	$ sudo yum update

3.Search for Docker package:

	$ sudo yum search docker

4.Get version information:

	$ sudo yum info docker

5.Install docker, run:

	$ sudo yum install docker

6.Add group membership for the default ec2-user so you can run all docker commands without using the sudo command:

	$ sudo usermod -a -G docker ec2-user
	$ id ec2-user
  # Reload a Linux user's group assignments to docker w/o logout
	$ newgrp docker


7.Need docker-compose too? Try any one of the following command:
  
  # 1. Get pip3 
	$ sudo yum install python3-pip
 
  # 2. Then run any one of the following
	$ sudo pip3 install docker-compose # with root access
 
  # OR #
 
	$ pip3 install --user docker-compose # without root access for security reasons
                  OR
	$ wget https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) 
	$ sudo mv docker-compose-$(uname -s)-$(uname -m) /usr/local/bin/docker-compose
	$ sudo chmod -v +x /usr/local/bin/docker-compose

8.Enable docker service at AMI boot time:

	$ sudo systemctl enable docker.service

9.Start the Docker service:

	$ sudo systemctl start docker.service

		Verification - Finding status

10.Get the docker service status on your AMI instance, run:

	$ sudo systemctl status docker.service
 
	####===) Getting docker version info on Amazon Linux (===######

   The docker-compose is installed in ‘/usr/local/bin’ directory and it may not be on your PATH settings. To see current PATH settings run the echo command/printf command:

	$ echo "$PATH"

   To add /usr/local/bin/ path to your bash startup file such as ~/.profile or ~/.bash_profile using the export command:

	$ export PATH=$PATH:/usr/local/bin
   
   Another option for developers is to use the find command to locate the docker-compose file as follows:

	$ sudo find / -name "docker-compose" -ls

   See “add $PATH permanently on Linux” for more info.

11.See docker version:
	
	$ docker  version
	$ docker --version

12.Also verify that docker-compose install was a success on AMI 2 by running the following command:

	$ docker-compose version

	####===) How to control docker service (===####

13.Use the systemctl command as follows:

	$ sudo systemctl start docker.service 	#<-- start the service
	$ sudo systemctl stop docker.service 	#<-- stop the service
	$ sudo systemctl restart docker.service 	#<-- restart the service
	$ sudo systemctl status docker.service 	#<-- get the service status
 
	@@@@@@@@    Creating your first Docker project   @@@@@@@@@

     1.Make a new project folder using the mkdir command and cd into it using the cd command. For instance:

	$ mkdir static-website-1
	$ cd static-website-1

     2.Use the echo command as follows to create a new index.html for our project:

	$ echo 'Docker Apache static site by nixCraft' > index.html

     3.Make a new Dockerfile using a text editor such as nano command or vim command:

	$ vim Dockerfile

	&&&***  Append the following config for your Amazon Linux container:  ***&&&


		FROM rockylinux/rockylinux:latest
 
		MAINTAINER nixCraft
		LABEL Remarks="RockyLinux test image for installing static webpage with Apache2"
 
		# Install apache2 with less
		RUN yum -y update && \
		yum -y install httpd && \
		yum clean all
 
		# Sample index.html for test 
		COPY index.html /var/www/html/index.html
 
		# Port and set entry point for container 
		EXPOSE 80
		ENTRYPOINT /usr/sbin/httpd -DFOREGROUND

     4.Build it:

	$ sudo docker build -t staticsite01 .

     5.List images:

	$ sudo docker images

     6.Run it:

	$ sudo docker run -d -p 80:80 --name staticsite01 staticsite01
	$ sudo docker ps
	$ sudo docker port staticsite01
	$ curl 127.0.0.1:80

	%%%===  Summing up  ===%%%

     That is all for now. You learned how to install Docker on AMI 2 and deploy Apache 2 as the Docker container for a static website. See Amazon Linux 2 home page for more information. Use the following command to get an overview of available commands:

	$docker help
	$ docker --help

     For specific client examples please see the man page for the specific Docker command using the man command. For instance:

	$ man docker-build
	$ man docker-run

     7.Push the newly created image to docker hub
            
            Create an account in 'https://hub.docker.com/'.

	$ docker login         ===)dockerlogin username:   dockerhubname  ,and passwd : dockerlogin passwd.

     8.So, this means you have to tag your image before pushing:

	$ docker push tag staticsite01 yeddul12/staticsite01

     9.And then you should be able to push it.

	$ docker push yeddul12/staticsite01
     
     10.Check  dockerhub account  

     11.To go to web-server search 

	http://publicip:80   	===)display the out-put






	URL :::-https://www.w3schools.com/html/html_colors.asp         ====&%&%$@@#$$$ HTML CODE URL @#$%_*&%$#@



     

